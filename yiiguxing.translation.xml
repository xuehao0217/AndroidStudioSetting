<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="316" />
    <option name="newTranslationDialogWidth" value="645" />
    <option name="newTranslationDialogX" value="435" />
    <option name="newTranslationDialogY" value="-655" />
    <histories>
      <item value="java.lang.IllegalArgumentException: class android.content.res.ColorStateList declares multiple JSON fields named mChangingConfigurations" />
      <item value="Unresolved reference: shakeClick" />
      <item value="on Load Cleared" />
      <item value="on Resource Ready" />
      <item value="deCodeSign" />
      <item value="deCodeCcSign" />
      <item value="cc Sign" />
      <item value="True to force write file, false otherwise." />
      <item value="数据" />
      <item value="逗号" />
      <item value="逗号1" />
      <item value="dou'hao" />
      <item value="Returns a string with the last n characters removed. Throws: IllegalArgumentException - if n is negative. Samples: samples.text.Strings.drop" />
      <item value="存在" />
      <item value="存" />
      <item value="已经存在" />
      <item value="已" />
      <item value="已经xun" />
      <item value="y" />
      <item value="打招呼" />
      <item value="da招呼" />
      <item value="大招呼" />
      <item value="已经存在i" />
      <item value="as Reversed" />
      <item value="高亮" />
      <item value="gao'l" />
      <item value="just&#10;" />
      <item value="选中" />
      <item value="Execution failed for task ':library_wxsub:kaptDebugKotlin'. &gt; A failure occurred while executing org.jetbrains.kotlin.gradle.internal.KaptWithoutKotlincTaskKaptExecutionWorkAction &gt; java.lang.reflect.InvocationTargetException (no error message)" />
      <item value="标签" />
      <item value="Sets the number of spans for the layout. This will invalidate all of the span assignments for Views. Calling this method will automatically result in a new layout request unless the spanCount parameter is equal to current span count. Params: spanCount – Number of spans to layou" />
      <item value="is Accept Privacy" />
      <item value="返回同意不同意" />
      <item value="Second child is cancelled because supervisor is cancelled" />
      <item value="First child is cancelled: {firstChild.isCancelled}, but second one is still active" />
      <item value="he first child finished its non cancellable block" />
      <item value="Children are cancelled, but exception is not handled until all children terminate" />
      <item value="Suspend function 'emit' should be called only from a coroutine or another suspend function" />
      <item value="Response" />
      <item value="解析" />
      <item value="Suspends the current coroutine until the channel is either closed or cancelled and invokes the given block before resuming the coroutine. This suspending function is cancellable. There is a prompt cancellation guarantee. If the job was cancelled while this function was suspended, it will not resume successfully. See suspendCancellableCoroutine documentation for low-level details. Note that when the producer channel is cancelled, this function resumes with a cancellation exception. Therefore, in case of cancellation, no code after the call to this function will be executed. That's why this function takes a lambda parameter. Example of usage: val callbackEventsStream = produce { val disposable = registerChannelInCallback(channel) awaitClose { disposable.dispose() } }" />
      <item value="Applying flowOn to SharedFlow has no effect. See the SharedFlow documentation on Operator Fusion." />
      <item value="Atomically compares the current value with expect and sets it to update if it is equal to expect. The result is true if the value was set to update and false otherwise. This function use a regular comparison using Any.equals. If both expect and update are equal to the current value, this function returns true, but it does not actually change the reference that is stored in the value. This method is thread-safe and can be safely invoked from concurrent coroutines without external synchronization." />
      <item value="同意" />
      <item value="18:13:22.756: [businessmodule_video_diagnose] git -c core.quotepath=false -c log.showSignature=false merge xh_dev_8381 18:14:08.311: [businessmodule_video_diagnose] git -c core.quotepath=false -c log.showSignature=false push --progress --porcelain origin refsheadsrelease:release Total 0 (delta 0), reused 0 (delta 0) remote: GitLab: You are not allowed to push code to protected branches on this project. error: failed to push some refs to 'https:gitlab.sy.soyoung.comandroidbusinessmodule_video_diagnose.git' To https:gitlab.sy.soyoung.comandroidbusinessmodule_video_diagnose.git ! refsheadsrelease:refsheadsrelease [remote rejected] (pre-receive hook declined)" />
      <item value="getRecommendEffectList" />
      <item value="黑色" />
      <item value="黑" />
      <item value="低质量&#10;" />
      <item value="低zhi'l&#10;" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="461" />
        <entry key="ENGLISH" value="462" />
        <entry key="CHINESE_TRADITIONAL" value="3" />
        <entry key="ALBANIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1639966727649" />
  </component>
</application>