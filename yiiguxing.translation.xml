<application>
  <component name="AppStorage">
    <histories>
      <item value="Sets the scroll duration in ms per inch. &lt;p&gt; Default value is 100.0f &lt;p&gt; This value will be used in {@link GravitySnapHelpercreateScroller(RecyclerView.LayoutManager)} @param ms scroll duration in ms per inch" />
      <item value="If you need to access Adapter for additional data, you can call * {@link RecyclerView#getChildAdapterPosition(View)} to get the adapter position of the * View." />
      <item value="Retrieve any offsets for the given item. Each field of &lt;code&gt;outRect&lt;/code&gt; specifies * the number of pixels that the item view should be inset by, similar to padding or margin. * The default implementation sets the bounds of outRect to 0 and returns." />
      <item value="Retrieve any offsets for the given item. Each field of &lt;code&gt;outRect&lt;/code&gt; specifies * the number of pixels that the item view should be inset by, similar to padding or margin. * The default implementation sets the bounds of outRect to 0 and returns. * * &lt;p&gt; * If this ItemDecoration does not affect the positioning of item views, it should set * all four fields of &lt;code&gt;outRect&lt;/code&gt; (left, top, right, bottom) to zero * before returning. * * &lt;p&gt; * If you need to access Adapter for additional data, you can call * {@link RecyclerView#getChildAdapterPosition(View)} to get the adapter position of the * View. * * @param outRect Rect to receive the output. * @param view The child view to decorate * @param parent RecyclerView this ItemDecoration is decorating * @param state The current state of RecyclerView." />
      <item value="NOTIFY ON SCROLL STATE IDLE" />
      <item value="reverse Layout" />
      <item value="* Returns the adapter position of the first fully visible view. This position does not include * adapter changes that were dispatched after the last layout pass. * &lt;p&gt; * Note that bounds check is only performed in the current orientation. That means, if * LayoutManager is horizontal, it will only check the view's left and right edges. * * @return The adapter position of the first fully visible item or * {@link RecyclerView#NO_POSITION} if there aren't any visible items. * @see #findFirstVisibleItemPosition() * @see #findLastCompletelyVisibleItemPosition()" />
      <item value="* Returns a view of the portion of this list between the specified [fromIndex] (inclusive) and [toIndex] (exclusive). * The returned list is backed by this list, so non-structural changes in the returned list are reflected in this list, and vice-versa. * * Structural changes in the base list make the behavior of the view undefined." />
      <item value="if this job was cancelled for any reason, either by explicit invocation of [cancel] or * because it had failed or its child or parent was cancelled. * In the general case, it does not imply that the" />
      <item value="* Returns `true` if this job was cancelled for any reason, either by explicit invocation of [cancel] or * because it had failed or its child or parent was cancelled. * In the general case, it does not imply that the * job has already [completed][isCompleted], because it may still be finishing whatever it was doing and * waiting for its [children] to complete. * * See [Job] documentation for more details on cancellation and failures." />
      <item value="* Returns `true` when this job is active -- it was already started and has not completed nor was cancelled yet. * The job that is waiting for its [children] to complete is still considered to be active if it * was not cancelled nor failed. * * See [Job] documentation for more details on job states." />
      <item value="检验" />
      <item value="验证" />
      <item value="verif" />
      <item value="Duplicate class cn.jpush.android.z.i$a found in modules jetified-jpush-3.7.0-runtime.jar (cn.jiguang.sdk:jpush:3.7.0) and jetified-oppo-3.7.0-runtime.jar (cn.jiguang.sdk.plugin:oppo:3.7.0)" />
      <item value="Duplicate class cn.asus.push.BuildConfig found in modules jetified-jpush-3.7.0-runtime.jar (cn.jiguang.sdk:jpush:3.7.0) and jetified-oppo-3.7.0-runtime.jar (cn.jiguang.sdk.plugin:oppo:3.7.0)" />
      <item value="Duplicate" />
      <item value="Duplicate class" />
      <item value="activity" />
      <item value="活动" />
      <item value="discount" />
      <item value="The name of this callable as it was declared in the source code. * If the callable has no name, a special invented name is created. * Nameless callables include: * - constructors have the name &quot;&lt;init&gt;&quot;, * - property accessors: the getter for a property named &quot;foo&quot; will have the name &quot;&lt;get-foo&gt;&quot;, * the setter, similarly, will have the name &quot;&lt;set-foo&gt;&quot;. */" />
      <item value="the value to set." />
      <item value="the metadata for the property." />
      <item value="the object for which the value is requested." />
      <item value="the type of the property value" />
      <item value="the type of object which owns the delegated property." />
      <item value="* Returns the value of the property for the given object. * @param thisRef the object for which the value is requested. * @param property the metadata for the property. * @return the property value." />
      <item value="* Called when the hidden state (as returned by {@link #isHidden()} of * the fragment has changed. Fragments start out not hidden; this will * be called whenever the fragment changes state from that. * @param hidden True if the fragment is now hidden, false otherwise. */" />
      <item value="Returns the visibility of this view and all of its ancestors" />
      <item value="is skip" />
      <item value="gender" />
      <item value="* CardView adds additional padding to draw shadows on platforms before Lollipop. * &lt;p&gt; * This may cause Cards to have different sizes between Lollipop and before Lollipop. If you * need to align CardView with other Views, you may need api version specific dimension * resources to account for the changes. * As an alternative, you can set this flag to &lt;code&gt;true&lt;/code&gt; and CardView will add the same * padding values on platforms Lollipop and after. * &lt;p&gt; * Since setting this flag to true adds unnecessary gaps in the UI, default value is * &lt;code&gt;false&lt;/code&gt;. * * @param useCompatPadding &lt;code&gt;true&gt;&lt;/code&gt; if CardView should add padding for the shadows on * platforms Lollipop and above. * @attr ref androidx.cardview.R.styleable#CardView_cardUseCompatPadding" />
      <item value="Caused by: org.gradle.internal.service.ServiceCreationException: Could not create service of type ExecutionHistoryStore using DependencyManagementGradleUserHomeScopeServices.createExecutionHistoryStore()." />
      <item value="Deprecated Gradle features were used in this build, making it incompatible with Gradle 6.0. Use '--warning-mode all' to show the individual deprecation warnings." />
      <item value="修改" />
      <item value="FIRST" />
      <item value="verify" />
      <item value="确认" />
      <item value="please commit or revert changes before checkout other branch." />
      <item value="repo" />
      <item value="协议" />
      <item value="忘记" />
      <item value="toger" />
      <item value="切换" />
      <item value="奇幻" />
      <item value="togger" />
      <item value="Positive" />
      <item value="Caused by: java.lang.RuntimeException: [repo] - module ':hospital:module_hospital_api': please commit or revert changes before checkout other branch." />
      <item value="small View" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="88" />
        <entry key="ENGLISH" value="89" />
        <entry key="CHINESE_TRADITIONAL" value="3" />
        <entry key="ALBANIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1616386304882" />
  </component>
</application>