<application>
  <component name="AppStorage">
    <option name="newTranslationDialogHeight" value="316" />
    <option name="newTranslationDialogWidth" value="645" />
    <option name="newTranslationDialogX" value="459" />
    <option name="newTranslationDialogY" value="-655" />
    <histories>
      <item value="Could not find com.soyoung.x.view:evaluation:0.0.0.7. Searched in the following locations:" />
      <item value="hint: its remote counterpart. Integrate the remote changes (e.g. Done hint: 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details." />
      <item value="failed to push some refs to" />
      <item value="You are not allowed to push code to protected branches on this project." />
      <item value="Return whether the notifications enabled." />
      <item value="set Home Pop Date List" />
      <item value="黑色" />
      <item value="Removes the given observer from the observers list. If this method is called while a state change is being dispatched, If the given observer has not yet received that event, it will not receive it. If the given observer has more than 1 method that observes the currently dispatched event and at least one of them received the event, all of them will receive the event and the removal will happen afterwards. Params: observer – The observer to be removed." />
      <item value="java 8" />
      <item value="Runs the given block on a CoroutineDispatcher that executes the block on the main thread and suspends the execution unless the Lifecycle's state is at least minState. If the Lifecycle moves to a lesser state while the block is running, the block will be suspended until the Lifecycle reaches to a state greater or equal to minState. Note that this won't effect any sub coroutine if they use a different CoroutineDispatcher. However, the block will not resume execution when the sub coroutine finishes unless the Lifecycle is at least in minState. If the Lifecycle is destroyed while the block is suspended, the block will be cancelled which will also cancel any child coroutine launched inside the block. If you have a try finally block in your code, the finally might run after the Lifecycle moves outside the desired state. It is recommended to check the Lifecycle.getCurrentState before accessing the UI. Similarly, if you have a catch statement that might catch CancellationException, you should check the Lifecycle.getCurrentState before accessing the UI. See the sample below for more details." />
      <item value="Runs the given block when the LifecycleOwner's Lifecycle is at least in Lifecycle.State.RESUMED state. See Also: Lifecycle.whenStateAtLeast" />
      <item value="A failure occurred while executing org.jetbrains.kotlin.gradle.internal.KaptExecution &gt; java.lang.reflect.InvocationTargetException (no error message)" />
      <item value="when State At Least" />
      <item value="Invalid target position" />
      <item value="java.lang.reflect.Invocation Target Exception" />
      <item value="描述" />
      <item value="Tab" />
      <item value="联动" />
      <item value="模拟&#10;" />
      <item value="模拟整形&#10;" />
      <item value="模拟" />
      <item value="mo'ni" />
      <item value="缓存&#10;" />
      <item value="hu" />
      <item value="哈" />
      <item value="handle To Main" />
      <item value="middle" />
      <item value="Invocation Target Exception" />
      <item value="还" />
      <item value="弥补&#10;" />
      <item value="mi" />
      <item value="Publish Diary Result Model" />
      <item value="Stratification" />
      <item value="extracted" />
      <item value="补签" />
      <item value="bu'qian" />
      <item value="bu" />
      <item value="cale X" />
      <item value="补卡" />
      <item value="补" />
      <item value="签到&#10;" />
      <item value="trace" />
      <item value="This feature requires ASM6" />
      <item value="&gt; Could not resolve all artifacts for configuration ':classpath'. &gt; Could not find gradle.plugin.cn.cxzheng.methodTracePlugin:tracemanplugin:1.0.4. Searched in the following locations:" />
      <item value="&#10;the absolute path to application-specific directory. May return null if shared storage is not currently available." />
      <item value="Sets whether this bottom sheet should skip the collapsed state when it is being hidden after it is expanded once. Setting this to true has no effect unless the sheet is hideable.&#10;Params:&#10;skipCollapsed – True if the bottom sheet should skip the collapsed state." />
      <item value="(server)' ~ Channel is unrecoverably broken and will be disposed!" />
      <item value="Channel is unrecoverably broken and will be disposed!" />
      <item value="Called when the hidden state (as returned by isHidden() of the fragment has changed. Fragments start out not hidden; this will be called whenever the fragment changes state from that.&#10;Params:&#10;hidden – True if the fragment is now hidden, false otherwise." />
      <item value="com.networking.error.ANError: java.net.UnknownHostException: Unable to resolve host &quot;devapi64.sy.soyoung.com&quot;: No address associated with hostname" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="240" />
        <entry key="ENGLISH" value="241" />
        <entry key="CHINESE_TRADITIONAL" value="3" />
        <entry key="ALBANIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1637049190887" />
  </component>
</application>